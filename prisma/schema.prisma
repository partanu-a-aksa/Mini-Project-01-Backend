generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  ATTENDEE
  ORGANIZER
}

model User {
  id       String @id @default(cuid())
  fullName String
  email    String @unique
  password String

  role Role @default(ATTENDEE)

  profilePic    String?
  points        Int?            @default(0)
  referralCode  ReferralCode?
  rewards       Reward[]
  referrals     ReferralUsage[] @relation("ReferrerRelation")
  usedReferrals ReferralUsage[] @relation("ReferredUserRelation")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ReferralCode {
  id         String   @id @default(cuid())
  code       String   @unique
  owner      User     @relation(fields: [ownerId], references: [id])
  ownerId    String   @unique
  usageCount Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  usages ReferralUsage[]
}

model ReferralUsage {
  id             String       @id @default(cuid())
  referralCode   ReferralCode @relation(fields: [referralCodeId], references: [id])
  referralCodeId String

  referrer   User   @relation("ReferrerRelation", fields: [referrerId], references: [id])
  referrerId String

  referredUser   User   @relation("ReferredUserRelation", fields: [referredUserId], references: [id])
  referredUserId String

  rewardPoints Int @default(10000)

  createdAt DateTime @default(now())
}

model Reward {
  id        String     @id @default(cuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  type      RewardType
  value     Int
  expiresAt DateTime
  isUsed    Boolean    @default(false)
  createdAt DateTime   @default(now())
}

enum RewardType {
  POINTS
  COUPON
}
